{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\nconst inputForm = document.querySelector('input[type=\"number\"]');\nconst formForm = document.querySelector('.form')\nlet inputValue;\nconst fulfilledBtn = document.querySelector('input[value=\"fulfilled\"]')\nconst rejectedBtn = document.querySelector('input[value=\"rejected\"]')\nlet yesBtn;\n\n\nformForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    let inputValue = Number(inputForm.value);\n    let stateBtn = e.target.elements['state'].value;\n    createPromise(inputValue, stateBtn)\n    // return new Promise ((resolve, reject) => {\n    //     setTimeout(() => {\n    //         if (stateBtn !== \"rejected\") {\n    //             resolve(`Fulfilled promise in ${inputValue}ms`);\n    //         }\n    //         else {\n    //             reject(`Rejected promise in ${inputValue}ms`);\n    //         }\n    //       }, Number(inputValue));\n    // })\n    .then (result => \n        iziToast.show({\n            message: `✅ Fulfilled promise in ${result}ms`,\n            messageColor: 'black',\n            messageLineHeight: '150%',\n            position: 'topRight',\n        }))\n\n    .catch (error => \n        iziToast.show({\n    message: `❌ Rejected promise in ${error}ms`,\n    messageColor: 'black',\n    messageLineHeight: '150%',\n    position: 'topRight',\n})\n)\n}\n)\n\nfunction createPromise (inputValue, stateBtn) {\n    return new Promise ((resolve, reject) => {\n        setTimeout(() => {\n            if (stateBtn !== \"rejected\") {\n                resolve(inputValue);\n            }\n            else {\n                reject(inputValue);\n            }\n          }, inputValue);\n    })\n}\n\n    // fulfilledBtn.addEventListener('change', (e) => {\n    //     if (e.target.checked) {\n    //         yesBtn = true;\n    //     }\n    //     console.log(yesBtn)\n    // })\n    \n    // rejectedBtn.addEventListener('change', (e) => {\n    //     if (e.target.checked) {\n    //         yesBtn = false;\n    //     }\n    //     console.log(yesBtn)\n    // })\n\n// function createPromise(value) {\n\n//     return new Promise ((resolve, reject) => {\n//         setTimeout(() => {\n//             if (yesBtn) {\n//                 resolve(`Fulfilled promise in ${value}ms`);\n//             }\n//             else {\n//                 reject(`Rejected promise in ${value}ms`);\n//             }\n//           }, Number(value));\n//     })\n//     .then (result => \n//         iziToast.show({\n//             message: `✅ Fulfilled promise in ${value}ms`,\n//             messageColor: 'black',\n//             messageLineHeight: '150%',\n//             position: 'topRight',\n//         }))\n\n//     .catch (error => \n//         iziToast.show({\n//     message: `❌ Rejected promise in ${value}ms`,\n//     messageColor: 'black',\n//     messageLineHeight: '150%',\n//     position: 'topRight',\n// })\n// )\n// }\n\n"],"names":["inputForm","formForm","inputValue","stateBtn","createPromise","result","iziToast","error","resolve","reject"],"mappings":"oGAKkB,SAAS,cAAc,uBAAuB,EAChE,MAAMA,EAAY,SAAS,cAAc,sBAAsB,EACzDC,EAAW,SAAS,cAAc,OAAO,EAE1B,SAAS,cAAc,0BAA0B,EAClD,SAAS,cAAc,yBAAyB,EAIpEA,EAAS,iBAAiB,SAAW,GAAM,CACvC,EAAE,eAAc,EAChB,IAAIC,EAAa,OAAOF,EAAU,KAAK,EACnCG,EAAW,EAAE,OAAO,SAAS,MAAS,MAC1CC,EAAcF,EAAYC,CAAQ,EAWjC,KAAME,GACHC,EAAS,KAAK,CACV,QAAS,0BAA0BD,CAAM,KACzC,aAAc,QACd,kBAAmB,OACnB,SAAU,UACtB,CAAS,CAAC,EAEL,MAAOE,GACJD,EAAS,KAAK,CAClB,QAAS,yBAAyBC,CAAK,KACvC,aAAc,QACd,kBAAmB,OACnB,SAAU,UACd,CAAC,CACD,CACA,CACA,EAEA,SAASH,EAAeF,EAAYC,EAAU,CAC1C,OAAO,IAAI,QAAS,CAACK,EAASC,IAAW,CACrC,WAAW,IAAM,CACTN,IAAa,WACbK,EAAQN,CAAU,EAGlBO,EAAOP,CAAU,CAEtB,EAAEA,CAAU,CACvB,CAAK,CACL"}